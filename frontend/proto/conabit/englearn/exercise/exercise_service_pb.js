// source: proto/conabit/englearn/exercise/exercise_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto_conabit_englearn_exercise_word_service_pb = require('../../../../proto/conabit/englearn/exercise/word_service_pb.js');
goog.object.extend(proto, proto_conabit_englearn_exercise_word_service_pb);
var proto_conabit_englearn_exercise_task_service_pb = require('../../../../proto/conabit/englearn/exercise/task_service_pb.js');
goog.object.extend(proto, proto_conabit_englearn_exercise_task_service_pb);
var proto_conabit_englearn_common_session_pb = require('../../../../proto/conabit/englearn/common/session_pb.js');
goog.object.extend(proto, proto_conabit_englearn_common_session_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.conabit.englearn.exercise.Exercise', null, global);
goog.exportSymbol('proto.conabit.englearn.exercise.FinishExerciseRequest', null, global);
goog.exportSymbol('proto.conabit.englearn.exercise.StartNewExerciseRequest', null, global);
goog.exportSymbol('proto.conabit.englearn.exercise.StartNewExerciseRequest.GenerationType', null, global);
goog.exportSymbol('proto.conabit.englearn.exercise.StartNewExerciseResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conabit.englearn.exercise.Exercise = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.conabit.englearn.exercise.Exercise.repeatedFields_, null);
};
goog.inherits(proto.conabit.englearn.exercise.Exercise, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conabit.englearn.exercise.Exercise.displayName = 'proto.conabit.englearn.exercise.Exercise';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.conabit.englearn.exercise.StartNewExerciseRequest.repeatedFields_, null);
};
goog.inherits(proto.conabit.englearn.exercise.StartNewExerciseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conabit.englearn.exercise.StartNewExerciseRequest.displayName = 'proto.conabit.englearn.exercise.StartNewExerciseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conabit.englearn.exercise.StartNewExerciseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.conabit.englearn.exercise.StartNewExerciseResponse.repeatedFields_, null);
};
goog.inherits(proto.conabit.englearn.exercise.StartNewExerciseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conabit.englearn.exercise.StartNewExerciseResponse.displayName = 'proto.conabit.englearn.exercise.StartNewExerciseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.conabit.englearn.exercise.FinishExerciseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.conabit.englearn.exercise.FinishExerciseRequest.repeatedFields_, null);
};
goog.inherits(proto.conabit.englearn.exercise.FinishExerciseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.conabit.englearn.exercise.FinishExerciseRequest.displayName = 'proto.conabit.englearn.exercise.FinishExerciseRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.conabit.englearn.exercise.Exercise.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conabit.englearn.exercise.Exercise.prototype.toObject = function(opt_includeInstance) {
  return proto.conabit.englearn.exercise.Exercise.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conabit.englearn.exercise.Exercise} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conabit.englearn.exercise.Exercise.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    startedAt: (f = msg.getStartedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    finishedAt: (f = msg.getFinishedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    solvedTasksList: jspb.Message.toObjectList(msg.getSolvedTasksList(),
    proto_conabit_englearn_exercise_task_service_pb.Task.toObject, includeInstance),
    failedTasksList: jspb.Message.toObjectList(msg.getFailedTasksList(),
    proto_conabit_englearn_exercise_task_service_pb.Task.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conabit.englearn.exercise.Exercise}
 */
proto.conabit.englearn.exercise.Exercise.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conabit.englearn.exercise.Exercise;
  return proto.conabit.englearn.exercise.Exercise.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conabit.englearn.exercise.Exercise} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conabit.englearn.exercise.Exercise}
 */
proto.conabit.englearn.exercise.Exercise.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartedAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFinishedAt(value);
      break;
    case 4:
      var value = new proto_conabit_englearn_exercise_task_service_pb.Task;
      reader.readMessage(value,proto_conabit_englearn_exercise_task_service_pb.Task.deserializeBinaryFromReader);
      msg.addSolvedTasks(value);
      break;
    case 5:
      var value = new proto_conabit_englearn_exercise_task_service_pb.Task;
      reader.readMessage(value,proto_conabit_englearn_exercise_task_service_pb.Task.deserializeBinaryFromReader);
      msg.addFailedTasks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conabit.englearn.exercise.Exercise.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conabit.englearn.exercise.Exercise.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conabit.englearn.exercise.Exercise} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conabit.englearn.exercise.Exercise.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStartedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFinishedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSolvedTasksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto_conabit_englearn_exercise_task_service_pb.Task.serializeBinaryToWriter
    );
  }
  f = message.getFailedTasksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto_conabit_englearn_exercise_task_service_pb.Task.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.conabit.englearn.exercise.Exercise.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.conabit.englearn.exercise.Exercise} returns this
 */
proto.conabit.englearn.exercise.Exercise.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp started_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.conabit.englearn.exercise.Exercise.prototype.getStartedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.conabit.englearn.exercise.Exercise} returns this
*/
proto.conabit.englearn.exercise.Exercise.prototype.setStartedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conabit.englearn.exercise.Exercise} returns this
 */
proto.conabit.englearn.exercise.Exercise.prototype.clearStartedAt = function() {
  return this.setStartedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conabit.englearn.exercise.Exercise.prototype.hasStartedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp finished_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.conabit.englearn.exercise.Exercise.prototype.getFinishedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.conabit.englearn.exercise.Exercise} returns this
*/
proto.conabit.englearn.exercise.Exercise.prototype.setFinishedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conabit.englearn.exercise.Exercise} returns this
 */
proto.conabit.englearn.exercise.Exercise.prototype.clearFinishedAt = function() {
  return this.setFinishedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conabit.englearn.exercise.Exercise.prototype.hasFinishedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Task solved_tasks = 4;
 * @return {!Array<!proto.conabit.englearn.exercise.Task>}
 */
proto.conabit.englearn.exercise.Exercise.prototype.getSolvedTasksList = function() {
  return /** @type{!Array<!proto.conabit.englearn.exercise.Task>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_conabit_englearn_exercise_task_service_pb.Task, 4));
};


/**
 * @param {!Array<!proto.conabit.englearn.exercise.Task>} value
 * @return {!proto.conabit.englearn.exercise.Exercise} returns this
*/
proto.conabit.englearn.exercise.Exercise.prototype.setSolvedTasksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.conabit.englearn.exercise.Task=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conabit.englearn.exercise.Task}
 */
proto.conabit.englearn.exercise.Exercise.prototype.addSolvedTasks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.conabit.englearn.exercise.Task, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conabit.englearn.exercise.Exercise} returns this
 */
proto.conabit.englearn.exercise.Exercise.prototype.clearSolvedTasksList = function() {
  return this.setSolvedTasksList([]);
};


/**
 * repeated Task failed_tasks = 5;
 * @return {!Array<!proto.conabit.englearn.exercise.Task>}
 */
proto.conabit.englearn.exercise.Exercise.prototype.getFailedTasksList = function() {
  return /** @type{!Array<!proto.conabit.englearn.exercise.Task>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_conabit_englearn_exercise_task_service_pb.Task, 5));
};


/**
 * @param {!Array<!proto.conabit.englearn.exercise.Task>} value
 * @return {!proto.conabit.englearn.exercise.Exercise} returns this
*/
proto.conabit.englearn.exercise.Exercise.prototype.setFailedTasksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.conabit.englearn.exercise.Task=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conabit.englearn.exercise.Task}
 */
proto.conabit.englearn.exercise.Exercise.prototype.addFailedTasks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.conabit.englearn.exercise.Task, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conabit.englearn.exercise.Exercise} returns this
 */
proto.conabit.englearn.exercise.Exercise.prototype.clearFailedTasksList = function() {
  return this.setFailedTasksList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.conabit.englearn.exercise.StartNewExerciseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conabit.englearn.exercise.StartNewExerciseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    session: (f = msg.getSession()) && proto_conabit_englearn_common_session_pb.Session.toObject(includeInstance, f),
    genType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wordsList: jspb.Message.toObjectList(msg.getWordsList(),
    proto_conabit_englearn_exercise_word_service_pb.WordPair.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conabit.englearn.exercise.StartNewExerciseRequest}
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conabit.englearn.exercise.StartNewExerciseRequest;
  return proto.conabit.englearn.exercise.StartNewExerciseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conabit.englearn.exercise.StartNewExerciseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conabit.englearn.exercise.StartNewExerciseRequest}
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_conabit_englearn_common_session_pb.Session;
      reader.readMessage(value,proto_conabit_englearn_common_session_pb.Session.deserializeBinaryFromReader);
      msg.setSession(value);
      break;
    case 2:
      var value = /** @type {!proto.conabit.englearn.exercise.StartNewExerciseRequest.GenerationType} */ (reader.readEnum());
      msg.setGenType(value);
      break;
    case 3:
      var value = new proto_conabit_englearn_exercise_word_service_pb.WordPair;
      reader.readMessage(value,proto_conabit_englearn_exercise_word_service_pb.WordPair.deserializeBinaryFromReader);
      msg.addWords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conabit.englearn.exercise.StartNewExerciseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conabit.englearn.exercise.StartNewExerciseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSession();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_conabit_englearn_common_session_pb.Session.serializeBinaryToWriter
    );
  }
  f = message.getGenType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getWordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_conabit_englearn_exercise_word_service_pb.WordPair.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.GenerationType = {
  OLD: 0,
  MY_CHOISE: 1,
  REPEAT: 2
};

/**
 * optional conabit.englearn.common.Session session = 1;
 * @return {?proto.conabit.englearn.common.Session}
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.prototype.getSession = function() {
  return /** @type{?proto.conabit.englearn.common.Session} */ (
    jspb.Message.getWrapperField(this, proto_conabit_englearn_common_session_pb.Session, 1));
};


/**
 * @param {?proto.conabit.englearn.common.Session|undefined} value
 * @return {!proto.conabit.englearn.exercise.StartNewExerciseRequest} returns this
*/
proto.conabit.englearn.exercise.StartNewExerciseRequest.prototype.setSession = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conabit.englearn.exercise.StartNewExerciseRequest} returns this
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.prototype.clearSession = function() {
  return this.setSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.prototype.hasSession = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GenerationType gen_type = 2;
 * @return {!proto.conabit.englearn.exercise.StartNewExerciseRequest.GenerationType}
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.prototype.getGenType = function() {
  return /** @type {!proto.conabit.englearn.exercise.StartNewExerciseRequest.GenerationType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.conabit.englearn.exercise.StartNewExerciseRequest.GenerationType} value
 * @return {!proto.conabit.englearn.exercise.StartNewExerciseRequest} returns this
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.prototype.setGenType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated WordPair words = 3;
 * @return {!Array<!proto.conabit.englearn.exercise.WordPair>}
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.prototype.getWordsList = function() {
  return /** @type{!Array<!proto.conabit.englearn.exercise.WordPair>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_conabit_englearn_exercise_word_service_pb.WordPair, 3));
};


/**
 * @param {!Array<!proto.conabit.englearn.exercise.WordPair>} value
 * @return {!proto.conabit.englearn.exercise.StartNewExerciseRequest} returns this
*/
proto.conabit.englearn.exercise.StartNewExerciseRequest.prototype.setWordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.conabit.englearn.exercise.WordPair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conabit.englearn.exercise.WordPair}
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.prototype.addWords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.conabit.englearn.exercise.WordPair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conabit.englearn.exercise.StartNewExerciseRequest} returns this
 */
proto.conabit.englearn.exercise.StartNewExerciseRequest.prototype.clearWordsList = function() {
  return this.setWordsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.conabit.englearn.exercise.StartNewExerciseResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conabit.englearn.exercise.StartNewExerciseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.conabit.englearn.exercise.StartNewExerciseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conabit.englearn.exercise.StartNewExerciseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conabit.englearn.exercise.StartNewExerciseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tasksList: jspb.Message.toObjectList(msg.getTasksList(),
    proto_conabit_englearn_exercise_task_service_pb.Task.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conabit.englearn.exercise.StartNewExerciseResponse}
 */
proto.conabit.englearn.exercise.StartNewExerciseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conabit.englearn.exercise.StartNewExerciseResponse;
  return proto.conabit.englearn.exercise.StartNewExerciseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conabit.englearn.exercise.StartNewExerciseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conabit.englearn.exercise.StartNewExerciseResponse}
 */
proto.conabit.englearn.exercise.StartNewExerciseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_conabit_englearn_exercise_task_service_pb.Task;
      reader.readMessage(value,proto_conabit_englearn_exercise_task_service_pb.Task.deserializeBinaryFromReader);
      msg.addTasks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conabit.englearn.exercise.StartNewExerciseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conabit.englearn.exercise.StartNewExerciseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conabit.englearn.exercise.StartNewExerciseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conabit.englearn.exercise.StartNewExerciseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTasksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_conabit_englearn_exercise_task_service_pb.Task.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Task tasks = 1;
 * @return {!Array<!proto.conabit.englearn.exercise.Task>}
 */
proto.conabit.englearn.exercise.StartNewExerciseResponse.prototype.getTasksList = function() {
  return /** @type{!Array<!proto.conabit.englearn.exercise.Task>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_conabit_englearn_exercise_task_service_pb.Task, 1));
};


/**
 * @param {!Array<!proto.conabit.englearn.exercise.Task>} value
 * @return {!proto.conabit.englearn.exercise.StartNewExerciseResponse} returns this
*/
proto.conabit.englearn.exercise.StartNewExerciseResponse.prototype.setTasksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.conabit.englearn.exercise.Task=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conabit.englearn.exercise.Task}
 */
proto.conabit.englearn.exercise.StartNewExerciseResponse.prototype.addTasks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.conabit.englearn.exercise.Task, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conabit.englearn.exercise.StartNewExerciseResponse} returns this
 */
proto.conabit.englearn.exercise.StartNewExerciseResponse.prototype.clearTasksList = function() {
  return this.setTasksList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.conabit.englearn.exercise.FinishExerciseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.conabit.englearn.exercise.FinishExerciseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    session: (f = msg.getSession()) && proto_conabit_englearn_common_session_pb.Session.toObject(includeInstance, f),
    tasksList: jspb.Message.toObjectList(msg.getTasksList(),
    proto_conabit_englearn_exercise_task_service_pb.Task.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.conabit.englearn.exercise.FinishExerciseRequest}
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.conabit.englearn.exercise.FinishExerciseRequest;
  return proto.conabit.englearn.exercise.FinishExerciseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.conabit.englearn.exercise.FinishExerciseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.conabit.englearn.exercise.FinishExerciseRequest}
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_conabit_englearn_common_session_pb.Session;
      reader.readMessage(value,proto_conabit_englearn_common_session_pb.Session.deserializeBinaryFromReader);
      msg.setSession(value);
      break;
    case 2:
      var value = new proto_conabit_englearn_exercise_task_service_pb.Task;
      reader.readMessage(value,proto_conabit_englearn_exercise_task_service_pb.Task.deserializeBinaryFromReader);
      msg.addTasks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.conabit.englearn.exercise.FinishExerciseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.conabit.englearn.exercise.FinishExerciseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSession();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_conabit_englearn_common_session_pb.Session.serializeBinaryToWriter
    );
  }
  f = message.getTasksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto_conabit_englearn_exercise_task_service_pb.Task.serializeBinaryToWriter
    );
  }
};


/**
 * optional conabit.englearn.common.Session session = 1;
 * @return {?proto.conabit.englearn.common.Session}
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.prototype.getSession = function() {
  return /** @type{?proto.conabit.englearn.common.Session} */ (
    jspb.Message.getWrapperField(this, proto_conabit_englearn_common_session_pb.Session, 1));
};


/**
 * @param {?proto.conabit.englearn.common.Session|undefined} value
 * @return {!proto.conabit.englearn.exercise.FinishExerciseRequest} returns this
*/
proto.conabit.englearn.exercise.FinishExerciseRequest.prototype.setSession = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.conabit.englearn.exercise.FinishExerciseRequest} returns this
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.prototype.clearSession = function() {
  return this.setSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.prototype.hasSession = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Task tasks = 2;
 * @return {!Array<!proto.conabit.englearn.exercise.Task>}
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.prototype.getTasksList = function() {
  return /** @type{!Array<!proto.conabit.englearn.exercise.Task>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_conabit_englearn_exercise_task_service_pb.Task, 2));
};


/**
 * @param {!Array<!proto.conabit.englearn.exercise.Task>} value
 * @return {!proto.conabit.englearn.exercise.FinishExerciseRequest} returns this
*/
proto.conabit.englearn.exercise.FinishExerciseRequest.prototype.setTasksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.conabit.englearn.exercise.Task=} opt_value
 * @param {number=} opt_index
 * @return {!proto.conabit.englearn.exercise.Task}
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.prototype.addTasks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.conabit.englearn.exercise.Task, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.conabit.englearn.exercise.FinishExerciseRequest} returns this
 */
proto.conabit.englearn.exercise.FinishExerciseRequest.prototype.clearTasksList = function() {
  return this.setTasksList([]);
};


goog.object.extend(exports, proto.conabit.englearn.exercise);
