// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.15.8
// source: proto/conabit/englearn/collection/collection_transport.proto

package collection

import (
	common "github.com/Conabit-Corp/EngLearn/proto/conabit/englearn/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateWordCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session        *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	WordCollection *WordCollection `protobuf:"bytes,2,opt,name=word_collection,json=wordCollection,proto3" json:"word_collection,omitempty"`
}

func (x *CreateWordCollectionRequest) Reset() {
	*x = CreateWordCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWordCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWordCollectionRequest) ProtoMessage() {}

func (x *CreateWordCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWordCollectionRequest.ProtoReflect.Descriptor instead.
func (*CreateWordCollectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWordCollectionRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *CreateWordCollectionRequest) GetWordCollection() *WordCollection {
	if x != nil {
		return x.WordCollection
	}
	return nil
}

type CreateGroupCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session        *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	WordCollection *WordCollection `protobuf:"bytes,2,opt,name=WordCollection,proto3" json:"WordCollection,omitempty"`
	GroupId        string          `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *CreateGroupCollectionRequest) Reset() {
	*x = CreateGroupCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupCollectionRequest) ProtoMessage() {}

func (x *CreateGroupCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupCollectionRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupCollectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGroupCollectionRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *CreateGroupCollectionRequest) GetWordCollection() *WordCollection {
	if x != nil {
		return x.WordCollection
	}
	return nil
}

func (x *CreateGroupCollectionRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type CreateWordCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
}

func (x *CreateWordCollectionResponse) Reset() {
	*x = CreateWordCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWordCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWordCollectionResponse) ProtoMessage() {}

func (x *CreateWordCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWordCollectionResponse.ProtoReflect.Descriptor instead.
func (*CreateWordCollectionResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{2}
}

func (x *CreateWordCollectionResponse) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

type GetWordCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session      *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	CollectionId string          `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"` // string collection_name = 3;//remove?
}

func (x *GetWordCollectionRequest) Reset() {
	*x = GetWordCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWordCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWordCollectionRequest) ProtoMessage() {}

func (x *GetWordCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWordCollectionRequest.ProtoReflect.Descriptor instead.
func (*GetWordCollectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{3}
}

func (x *GetWordCollectionRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *GetWordCollectionRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

type GetWordCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection *WordCollection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *GetWordCollectionResponse) Reset() {
	*x = GetWordCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWordCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWordCollectionResponse) ProtoMessage() {}

func (x *GetWordCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWordCollectionResponse.ProtoReflect.Descriptor instead.
func (*GetWordCollectionResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{4}
}

func (x *GetWordCollectionResponse) GetCollection() *WordCollection {
	if x != nil {
		return x.Collection
	}
	return nil
}

type GetUserCollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *GetUserCollectionsRequest) Reset() {
	*x = GetUserCollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCollectionsRequest) ProtoMessage() {}

func (x *GetUserCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCollectionsRequest.ProtoReflect.Descriptor instead.
func (*GetUserCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserCollectionsRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type GetUserCollectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections *CollectionsOverview `protobuf:"bytes,1,opt,name=collections,proto3" json:"collections,omitempty"`
}

func (x *GetUserCollectionsResponse) Reset() {
	*x = GetUserCollectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCollectionsResponse) ProtoMessage() {}

func (x *GetUserCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCollectionsResponse.ProtoReflect.Descriptor instead.
func (*GetUserCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserCollectionsResponse) GetCollections() *CollectionsOverview {
	if x != nil {
		return x.Collections
	}
	return nil
}

type GetGroupCollectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	GroupId string          `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetGroupCollectionsRequest) Reset() {
	*x = GetGroupCollectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupCollectionsRequest) ProtoMessage() {}

func (x *GetGroupCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupCollectionsRequest.ProtoReflect.Descriptor instead.
func (*GetGroupCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{7}
}

func (x *GetGroupCollectionsRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *GetGroupCollectionsRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupCollectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collections *CollectionsOverview `protobuf:"bytes,1,opt,name=collections,proto3" json:"collections,omitempty"`
}

func (x *GetGroupCollectionsResponse) Reset() {
	*x = GetGroupCollectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupCollectionsResponse) ProtoMessage() {}

func (x *GetGroupCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupCollectionsResponse.ProtoReflect.Descriptor instead.
func (*GetGroupCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{8}
}

func (x *GetGroupCollectionsResponse) GetCollections() *CollectionsOverview {
	if x != nil {
		return x.Collections
	}
	return nil
}

type DeleteWordCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session      *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	CollectionId string          `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
}

func (x *DeleteWordCollectionRequest) Reset() {
	*x = DeleteWordCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWordCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWordCollectionRequest) ProtoMessage() {}

func (x *DeleteWordCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWordCollectionRequest.ProtoReflect.Descriptor instead.
func (*DeleteWordCollectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteWordCollectionRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *DeleteWordCollectionRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

type DeleteWordCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collection *WordCollection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
}

func (x *DeleteWordCollectionResponse) Reset() {
	*x = DeleteWordCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWordCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWordCollectionResponse) ProtoMessage() {}

func (x *DeleteWordCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWordCollectionResponse.ProtoReflect.Descriptor instead.
func (*DeleteWordCollectionResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteWordCollectionResponse) GetCollection() *WordCollection {
	if x != nil {
		return x.Collection
	}
	return nil
}

type AddWordToCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session      *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	CollectionId string          `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	WordPair     *WordPair       `protobuf:"bytes,3,opt,name=word_pair,json=wordPair,proto3" json:"word_pair,omitempty"`
}

func (x *AddWordToCollectionRequest) Reset() {
	*x = AddWordToCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWordToCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWordToCollectionRequest) ProtoMessage() {}

func (x *AddWordToCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWordToCollectionRequest.ProtoReflect.Descriptor instead.
func (*AddWordToCollectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{11}
}

func (x *AddWordToCollectionRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *AddWordToCollectionRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *AddWordToCollectionRequest) GetWordPair() *WordPair {
	if x != nil {
		return x.WordPair
	}
	return nil
}

type AddWordToCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WordPairId string `protobuf:"bytes,1,opt,name=word_pair_id,json=wordPairId,proto3" json:"word_pair_id,omitempty"`
}

func (x *AddWordToCollectionResponse) Reset() {
	*x = AddWordToCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWordToCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWordToCollectionResponse) ProtoMessage() {}

func (x *AddWordToCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWordToCollectionResponse.ProtoReflect.Descriptor instead.
func (*AddWordToCollectionResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{12}
}

func (x *AddWordToCollectionResponse) GetWordPairId() string {
	if x != nil {
		return x.WordPairId
	}
	return ""
}

type RemoveWordFromCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session      *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	CollectionId string          `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	WordPairId   string          `protobuf:"bytes,3,opt,name=word_pair_id,json=wordPairId,proto3" json:"word_pair_id,omitempty"`
}

func (x *RemoveWordFromCollectionRequest) Reset() {
	*x = RemoveWordFromCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWordFromCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWordFromCollectionRequest) ProtoMessage() {}

func (x *RemoveWordFromCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWordFromCollectionRequest.ProtoReflect.Descriptor instead.
func (*RemoveWordFromCollectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveWordFromCollectionRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *RemoveWordFromCollectionRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *RemoveWordFromCollectionRequest) GetWordPairId() string {
	if x != nil {
		return x.WordPairId
	}
	return ""
}

type RemoveWordFromCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WordPair *WordPair `protobuf:"bytes,1,opt,name=word_pair,json=wordPair,proto3" json:"word_pair,omitempty"`
}

func (x *RemoveWordFromCollectionResponse) Reset() {
	*x = RemoveWordFromCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWordFromCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWordFromCollectionResponse) ProtoMessage() {}

func (x *RemoveWordFromCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWordFromCollectionResponse.ProtoReflect.Descriptor instead.
func (*RemoveWordFromCollectionResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveWordFromCollectionResponse) GetWordPair() *WordPair {
	if x != nil {
		return x.WordPair
	}
	return nil
}

type EditWordFromCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session      *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	CollectionId string          `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	WordPair     *WordPair       `protobuf:"bytes,3,opt,name=word_pair,json=wordPair,proto3" json:"word_pair,omitempty"`
}

func (x *EditWordFromCollectionRequest) Reset() {
	*x = EditWordFromCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditWordFromCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditWordFromCollectionRequest) ProtoMessage() {}

func (x *EditWordFromCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditWordFromCollectionRequest.ProtoReflect.Descriptor instead.
func (*EditWordFromCollectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{15}
}

func (x *EditWordFromCollectionRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *EditWordFromCollectionRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *EditWordFromCollectionRequest) GetWordPair() *WordPair {
	if x != nil {
		return x.WordPair
	}
	return nil
}

type EditWordFromCollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // bool success = 1; ???
}

func (x *EditWordFromCollectionResponse) Reset() {
	*x = EditWordFromCollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditWordFromCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditWordFromCollectionResponse) ProtoMessage() {}

func (x *EditWordFromCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditWordFromCollectionResponse.ProtoReflect.Descriptor instead.
func (*EditWordFromCollectionResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP(), []int{16}
}

func (x *EditWordFromCollectionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_conabit_englearn_collection_collection_transport_proto protoreflect.FileDescriptor

var file_proto_conabit_englearn_collection_collection_transport_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b,
	0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65,
	0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x54, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62,
	0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xca, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69,
	0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6e,
	0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0x43, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65,
	0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63,
	0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6e,
	0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x0b, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x73, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62,
	0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x71,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x7e, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x6b, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc1,
	0x01, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a,
	0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x42,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x57, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x69, 0x72, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x61,
	0x69, 0x72, 0x22, 0x3f, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x69,
	0x72, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x6f,
	0x72, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62,
	0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x64,
	0x5f, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x77, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x69, 0x72, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x20, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x57, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x69, 0x72, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x61,
	0x69, 0x72, 0x22, 0xc4, 0x01, 0x0a, 0x1d, 0x45, 0x64, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x46,
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x61,
	0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62,
	0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x08, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x69, 0x72, 0x22, 0x3a, 0x0a, 0x1e, 0x45, 0x64, 0x69,
	0x74, 0x57, 0x6f, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2d, 0x43, 0x6f, 0x72, 0x70,
	0x2f, 0x45, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_conabit_englearn_collection_collection_transport_proto_rawDescOnce sync.Once
	file_proto_conabit_englearn_collection_collection_transport_proto_rawDescData = file_proto_conabit_englearn_collection_collection_transport_proto_rawDesc
)

func file_proto_conabit_englearn_collection_collection_transport_proto_rawDescGZIP() []byte {
	file_proto_conabit_englearn_collection_collection_transport_proto_rawDescOnce.Do(func() {
		file_proto_conabit_englearn_collection_collection_transport_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_conabit_englearn_collection_collection_transport_proto_rawDescData)
	})
	return file_proto_conabit_englearn_collection_collection_transport_proto_rawDescData
}

var file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_conabit_englearn_collection_collection_transport_proto_goTypes = []interface{}{
	(*CreateWordCollectionRequest)(nil),      // 0: conabit.englearn.collection.CreateWordCollectionRequest
	(*CreateGroupCollectionRequest)(nil),     // 1: conabit.englearn.collection.CreateGroupCollectionRequest
	(*CreateWordCollectionResponse)(nil),     // 2: conabit.englearn.collection.CreateWordCollectionResponse
	(*GetWordCollectionRequest)(nil),         // 3: conabit.englearn.collection.GetWordCollectionRequest
	(*GetWordCollectionResponse)(nil),        // 4: conabit.englearn.collection.GetWordCollectionResponse
	(*GetUserCollectionsRequest)(nil),        // 5: conabit.englearn.collection.GetUserCollectionsRequest
	(*GetUserCollectionsResponse)(nil),       // 6: conabit.englearn.collection.GetUserCollectionsResponse
	(*GetGroupCollectionsRequest)(nil),       // 7: conabit.englearn.collection.GetGroupCollectionsRequest
	(*GetGroupCollectionsResponse)(nil),      // 8: conabit.englearn.collection.GetGroupCollectionsResponse
	(*DeleteWordCollectionRequest)(nil),      // 9: conabit.englearn.collection.DeleteWordCollectionRequest
	(*DeleteWordCollectionResponse)(nil),     // 10: conabit.englearn.collection.DeleteWordCollectionResponse
	(*AddWordToCollectionRequest)(nil),       // 11: conabit.englearn.collection.AddWordToCollectionRequest
	(*AddWordToCollectionResponse)(nil),      // 12: conabit.englearn.collection.AddWordToCollectionResponse
	(*RemoveWordFromCollectionRequest)(nil),  // 13: conabit.englearn.collection.RemoveWordFromCollectionRequest
	(*RemoveWordFromCollectionResponse)(nil), // 14: conabit.englearn.collection.RemoveWordFromCollectionResponse
	(*EditWordFromCollectionRequest)(nil),    // 15: conabit.englearn.collection.EditWordFromCollectionRequest
	(*EditWordFromCollectionResponse)(nil),   // 16: conabit.englearn.collection.EditWordFromCollectionResponse
	(*common.Session)(nil),                   // 17: conabit.englearn.common.Session
	(*WordCollection)(nil),                   // 18: conabit.englearn.collection.WordCollection
	(*CollectionsOverview)(nil),              // 19: conabit.englearn.collection.CollectionsOverview
	(*WordPair)(nil),                         // 20: conabit.englearn.collection.WordPair
}
var file_proto_conabit_englearn_collection_collection_transport_proto_depIdxs = []int32{
	17, // 0: conabit.englearn.collection.CreateWordCollectionRequest.session:type_name -> conabit.englearn.common.Session
	18, // 1: conabit.englearn.collection.CreateWordCollectionRequest.word_collection:type_name -> conabit.englearn.collection.WordCollection
	17, // 2: conabit.englearn.collection.CreateGroupCollectionRequest.session:type_name -> conabit.englearn.common.Session
	18, // 3: conabit.englearn.collection.CreateGroupCollectionRequest.WordCollection:type_name -> conabit.englearn.collection.WordCollection
	17, // 4: conabit.englearn.collection.GetWordCollectionRequest.session:type_name -> conabit.englearn.common.Session
	18, // 5: conabit.englearn.collection.GetWordCollectionResponse.collection:type_name -> conabit.englearn.collection.WordCollection
	17, // 6: conabit.englearn.collection.GetUserCollectionsRequest.session:type_name -> conabit.englearn.common.Session
	19, // 7: conabit.englearn.collection.GetUserCollectionsResponse.collections:type_name -> conabit.englearn.collection.CollectionsOverview
	17, // 8: conabit.englearn.collection.GetGroupCollectionsRequest.session:type_name -> conabit.englearn.common.Session
	19, // 9: conabit.englearn.collection.GetGroupCollectionsResponse.collections:type_name -> conabit.englearn.collection.CollectionsOverview
	17, // 10: conabit.englearn.collection.DeleteWordCollectionRequest.session:type_name -> conabit.englearn.common.Session
	18, // 11: conabit.englearn.collection.DeleteWordCollectionResponse.collection:type_name -> conabit.englearn.collection.WordCollection
	17, // 12: conabit.englearn.collection.AddWordToCollectionRequest.session:type_name -> conabit.englearn.common.Session
	20, // 13: conabit.englearn.collection.AddWordToCollectionRequest.word_pair:type_name -> conabit.englearn.collection.WordPair
	17, // 14: conabit.englearn.collection.RemoveWordFromCollectionRequest.session:type_name -> conabit.englearn.common.Session
	20, // 15: conabit.englearn.collection.RemoveWordFromCollectionResponse.word_pair:type_name -> conabit.englearn.collection.WordPair
	17, // 16: conabit.englearn.collection.EditWordFromCollectionRequest.session:type_name -> conabit.englearn.common.Session
	20, // 17: conabit.englearn.collection.EditWordFromCollectionRequest.word_pair:type_name -> conabit.englearn.collection.WordPair
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_proto_conabit_englearn_collection_collection_transport_proto_init() }
func file_proto_conabit_englearn_collection_collection_transport_proto_init() {
	if File_proto_conabit_englearn_collection_collection_transport_proto != nil {
		return
	}
	file_proto_conabit_englearn_collection_collection_models_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWordCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWordCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWordCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWordCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCollectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupCollectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupCollectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWordCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWordCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWordToCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWordToCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWordFromCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWordFromCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditWordFromCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditWordFromCollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_conabit_englearn_collection_collection_transport_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_conabit_englearn_collection_collection_transport_proto_goTypes,
		DependencyIndexes: file_proto_conabit_englearn_collection_collection_transport_proto_depIdxs,
		MessageInfos:      file_proto_conabit_englearn_collection_collection_transport_proto_msgTypes,
	}.Build()
	File_proto_conabit_englearn_collection_collection_transport_proto = out.File
	file_proto_conabit_englearn_collection_collection_transport_proto_rawDesc = nil
	file_proto_conabit_englearn_collection_collection_transport_proto_goTypes = nil
	file_proto_conabit_englearn_collection_collection_transport_proto_depIdxs = nil
}
