// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: proto/conabit/englearn/exercise/task_service.proto

package exercise

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task_TaskType int32

const (
	Task_JUST_INPUT Task_TaskType = 0
	Task_ONE_OF_N   Task_TaskType = 1
)

// Enum value maps for Task_TaskType.
var (
	Task_TaskType_name = map[int32]string{
		0: "JUST_INPUT",
		1: "ONE_OF_N",
	}
	Task_TaskType_value = map[string]int32{
		"JUST_INPUT": 0,
		"ONE_OF_N":   1,
	}
)

func (x Task_TaskType) Enum() *Task_TaskType {
	p := new(Task_TaskType)
	*p = x
	return p
}

func (x Task_TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_conabit_englearn_exercise_task_service_proto_enumTypes[0].Descriptor()
}

func (Task_TaskType) Type() protoreflect.EnumType {
	return &file_proto_conabit_englearn_exercise_task_service_proto_enumTypes[0]
}

func (x Task_TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_TaskType.Descriptor instead.
func (Task_TaskType) EnumDescriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_exercise_task_service_proto_rawDescGZIP(), []int{0, 0}
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IncorrectAnswer string        `protobuf:"bytes,2,opt,name=incorrect_answer,json=incorrectAnswer,proto3" json:"incorrect_answer,omitempty"` //optional
	WordPair        *WordPair     `protobuf:"bytes,3,opt,name=word_pair,json=wordPair,proto3" json:"word_pair,omitempty"`
	TaskType        Task_TaskType `protobuf:"varint,4,opt,name=task_type,json=taskType,proto3,enum=conabit.englearn.exercise.Task_TaskType" json:"task_type,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_exercise_task_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_exercise_task_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_exercise_task_service_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetIncorrectAnswer() string {
	if x != nil {
		return x.IncorrectAnswer
	}
	return ""
}

func (x *Task) GetWordPair() *WordPair {
	if x != nil {
		return x.WordPair
	}
	return nil
}

func (x *Task) GetTaskType() Task_TaskType {
	if x != nil {
		return x.TaskType
	}
	return Task_JUST_INPUT
}

var File_proto_conabit_englearn_exercise_task_service_proto protoreflect.FileDescriptor

var file_proto_conabit_englearn_exercise_task_service_proto_rawDesc = []byte{
	0x0a, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e,
	0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x1a,
	0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x65,
	0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x2f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x69, 0x6e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x70, 0x61, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e,
	0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x65, 0x78,
	0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x08, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x69, 0x72, 0x12, 0x45, 0x0a, 0x09, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63,
	0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e,
	0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x28, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a,
	0x4a, 0x55, 0x53, 0x54, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x4e, 0x10, 0x01, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74,
	0x2d, 0x43, 0x6f, 0x72, 0x70, 0x2f, 0x45, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x65, 0x6e, 0x67,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_conabit_englearn_exercise_task_service_proto_rawDescOnce sync.Once
	file_proto_conabit_englearn_exercise_task_service_proto_rawDescData = file_proto_conabit_englearn_exercise_task_service_proto_rawDesc
)

func file_proto_conabit_englearn_exercise_task_service_proto_rawDescGZIP() []byte {
	file_proto_conabit_englearn_exercise_task_service_proto_rawDescOnce.Do(func() {
		file_proto_conabit_englearn_exercise_task_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_conabit_englearn_exercise_task_service_proto_rawDescData)
	})
	return file_proto_conabit_englearn_exercise_task_service_proto_rawDescData
}

var file_proto_conabit_englearn_exercise_task_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_conabit_englearn_exercise_task_service_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_conabit_englearn_exercise_task_service_proto_goTypes = []interface{}{
	(Task_TaskType)(0), // 0: conabit.englearn.exercise.Task.TaskType
	(*Task)(nil),       // 1: conabit.englearn.exercise.Task
	(*WordPair)(nil),   // 2: conabit.englearn.exercise.WordPair
}
var file_proto_conabit_englearn_exercise_task_service_proto_depIdxs = []int32{
	2, // 0: conabit.englearn.exercise.Task.word_pair:type_name -> conabit.englearn.exercise.WordPair
	0, // 1: conabit.englearn.exercise.Task.task_type:type_name -> conabit.englearn.exercise.Task.TaskType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_conabit_englearn_exercise_task_service_proto_init() }
func file_proto_conabit_englearn_exercise_task_service_proto_init() {
	if File_proto_conabit_englearn_exercise_task_service_proto != nil {
		return
	}
	file_proto_conabit_englearn_exercise_word_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_conabit_englearn_exercise_task_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_conabit_englearn_exercise_task_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_conabit_englearn_exercise_task_service_proto_goTypes,
		DependencyIndexes: file_proto_conabit_englearn_exercise_task_service_proto_depIdxs,
		EnumInfos:         file_proto_conabit_englearn_exercise_task_service_proto_enumTypes,
		MessageInfos:      file_proto_conabit_englearn_exercise_task_service_proto_msgTypes,
	}.Build()
	File_proto_conabit_englearn_exercise_task_service_proto = out.File
	file_proto_conabit_englearn_exercise_task_service_proto_rawDesc = nil
	file_proto_conabit_englearn_exercise_task_service_proto_goTypes = nil
	file_proto_conabit_englearn_exercise_task_service_proto_depIdxs = nil
}
