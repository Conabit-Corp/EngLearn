// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.15.8
// source: proto/conabit/englearn/exercise/task_service.proto

package exercise

import (
	context "context"
	common "github.com/Conabit-Corp/EngLearn/proto/conabit/englearn/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task_TaskType int32

const (
	Task_JUST_INPUT Task_TaskType = 0
	Task_ONE_OF_N   Task_TaskType = 1
	Task_N_OF_N     Task_TaskType = 2
)

// Enum value maps for Task_TaskType.
var (
	Task_TaskType_name = map[int32]string{
		0: "JUST_INPUT",
		1: "ONE_OF_N",
		2: "N_OF_N",
	}
	Task_TaskType_value = map[string]int32{
		"JUST_INPUT": 0,
		"ONE_OF_N":   1,
		"N_OF_N":     2,
	}
)

func (x Task_TaskType) Enum() *Task_TaskType {
	p := new(Task_TaskType)
	*p = x
	return p
}

func (x Task_TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_conabit_englearn_exercise_task_service_proto_enumTypes[0].Descriptor()
}

func (Task_TaskType) Type() protoreflect.EnumType {
	return &file_proto_conabit_englearn_exercise_task_service_proto_enumTypes[0]
}

func (x Task_TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_TaskType.Descriptor instead.
func (Task_TaskType) EnumDescriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_exercise_task_service_proto_rawDescGZIP(), []int{2, 0}
}

type SolveTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Task    *Task           `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *SolveTaskRequest) Reset() {
	*x = SolveTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_exercise_task_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolveTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolveTaskRequest) ProtoMessage() {}

func (x *SolveTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_exercise_task_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolveTaskRequest.ProtoReflect.Descriptor instead.
func (*SolveTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_exercise_task_service_proto_rawDescGZIP(), []int{0}
}

func (x *SolveTaskRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *SolveTaskRequest) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type SolveTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Solved bool `protobuf:"varint,1,opt,name=solved,proto3" json:"solved,omitempty"`
}

func (x *SolveTaskResponse) Reset() {
	*x = SolveTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_exercise_task_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolveTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolveTaskResponse) ProtoMessage() {}

func (x *SolveTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_exercise_task_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolveTaskResponse.ProtoReflect.Descriptor instead.
func (*SolveTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_exercise_task_service_proto_rawDescGZIP(), []int{1}
}

func (x *SolveTaskResponse) GetSolved() bool {
	if x != nil {
		return x.Solved
	}
	return false
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Answer   string        `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	Word     *Word         `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
	PairId   string        `protobuf:"bytes,4,opt,name=pair_id,json=pairId,proto3" json:"pair_id,omitempty"`
	TaskType Task_TaskType `protobuf:"varint,5,opt,name=task_type,json=taskType,proto3,enum=conabit.englearn.exercise.Task_TaskType" json:"task_type,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_exercise_task_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_exercise_task_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_exercise_task_service_proto_rawDescGZIP(), []int{2}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *Task) GetWord() *Word {
	if x != nil {
		return x.Word
	}
	return nil
}

func (x *Task) GetPairId() string {
	if x != nil {
		return x.PairId
	}
	return ""
}

func (x *Task) GetTaskType() Task_TaskType {
	if x != nil {
		return x.TaskType
	}
	return Task_JUST_INPUT
}

var File_proto_conabit_englearn_exercise_task_service_proto protoreflect.FileDescriptor

var file_proto_conabit_englearn_exercise_task_service_proto_rawDesc = []byte{
	0x0a, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e,
	0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x1a,
	0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x65,
	0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x2f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62,
	0x69, 0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x83, 0x01, 0x0a, 0x10, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74,
	0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x2b, 0x0a, 0x11, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x22, 0xf9, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x57,
	0x6f, 0x72, 0x64, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x69,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x69, 0x72,
	0x49, 0x64, 0x12, 0x45, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x34, 0x0a, 0x08, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4a, 0x55, 0x53, 0x54, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x46, 0x5f,
	0x4e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x5f, 0x4f, 0x46, 0x5f, 0x4e, 0x10, 0x02, 0x32,
	0x77, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68,
	0x0a, 0x09, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2b, 0x2e, 0x63, 0x6f,
	0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x65,
	0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62,
	0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x65, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x2e, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2d, 0x43,
	0x6f, 0x72, 0x70, 0x2f, 0x45, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_conabit_englearn_exercise_task_service_proto_rawDescOnce sync.Once
	file_proto_conabit_englearn_exercise_task_service_proto_rawDescData = file_proto_conabit_englearn_exercise_task_service_proto_rawDesc
)

func file_proto_conabit_englearn_exercise_task_service_proto_rawDescGZIP() []byte {
	file_proto_conabit_englearn_exercise_task_service_proto_rawDescOnce.Do(func() {
		file_proto_conabit_englearn_exercise_task_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_conabit_englearn_exercise_task_service_proto_rawDescData)
	})
	return file_proto_conabit_englearn_exercise_task_service_proto_rawDescData
}

var file_proto_conabit_englearn_exercise_task_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_conabit_englearn_exercise_task_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_conabit_englearn_exercise_task_service_proto_goTypes = []interface{}{
	(Task_TaskType)(0),        // 0: conabit.englearn.exercise.Task.TaskType
	(*SolveTaskRequest)(nil),  // 1: conabit.englearn.exercise.SolveTaskRequest
	(*SolveTaskResponse)(nil), // 2: conabit.englearn.exercise.SolveTaskResponse
	(*Task)(nil),              // 3: conabit.englearn.exercise.Task
	(*common.Session)(nil),    // 4: conabit.englearn.common.Session
	(*Word)(nil),              // 5: conabit.englearn.exercise.Word
}
var file_proto_conabit_englearn_exercise_task_service_proto_depIdxs = []int32{
	4, // 0: conabit.englearn.exercise.SolveTaskRequest.session:type_name -> conabit.englearn.common.Session
	3, // 1: conabit.englearn.exercise.SolveTaskRequest.task:type_name -> conabit.englearn.exercise.Task
	5, // 2: conabit.englearn.exercise.Task.word:type_name -> conabit.englearn.exercise.Word
	0, // 3: conabit.englearn.exercise.Task.task_type:type_name -> conabit.englearn.exercise.Task.TaskType
	1, // 4: conabit.englearn.exercise.TaskService.SolveTask:input_type -> conabit.englearn.exercise.SolveTaskRequest
	2, // 5: conabit.englearn.exercise.TaskService.SolveTask:output_type -> conabit.englearn.exercise.SolveTaskResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_conabit_englearn_exercise_task_service_proto_init() }
func file_proto_conabit_englearn_exercise_task_service_proto_init() {
	if File_proto_conabit_englearn_exercise_task_service_proto != nil {
		return
	}
	file_proto_conabit_englearn_exercise_word_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_conabit_englearn_exercise_task_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolveTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_exercise_task_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolveTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_exercise_task_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_conabit_englearn_exercise_task_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_conabit_englearn_exercise_task_service_proto_goTypes,
		DependencyIndexes: file_proto_conabit_englearn_exercise_task_service_proto_depIdxs,
		EnumInfos:         file_proto_conabit_englearn_exercise_task_service_proto_enumTypes,
		MessageInfos:      file_proto_conabit_englearn_exercise_task_service_proto_msgTypes,
	}.Build()
	File_proto_conabit_englearn_exercise_task_service_proto = out.File
	file_proto_conabit_englearn_exercise_task_service_proto_rawDesc = nil
	file_proto_conabit_englearn_exercise_task_service_proto_goTypes = nil
	file_proto_conabit_englearn_exercise_task_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	SolveTask(ctx context.Context, in *SolveTaskRequest, opts ...grpc.CallOption) (*SolveTaskResponse, error)
}

type taskServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTaskServiceClient(cc grpc.ClientConnInterface) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) SolveTask(ctx context.Context, in *SolveTaskRequest, opts ...grpc.CallOption) (*SolveTaskResponse, error) {
	out := new(SolveTaskResponse)
	err := c.cc.Invoke(ctx, "/conabit.englearn.exercise.TaskService/SolveTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	SolveTask(context.Context, *SolveTaskRequest) (*SolveTaskResponse, error)
}

// UnimplementedTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServiceServer struct {
}

func (*UnimplementedTaskServiceServer) SolveTask(context.Context, *SolveTaskRequest) (*SolveTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SolveTask not implemented")
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_SolveTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SolveTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).SolveTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conabit.englearn.exercise.TaskService/SolveTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).SolveTask(ctx, req.(*SolveTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conabit.englearn.exercise.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SolveTask",
			Handler:    _TaskService_SolveTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/conabit/englearn/exercise/task_service.proto",
}
