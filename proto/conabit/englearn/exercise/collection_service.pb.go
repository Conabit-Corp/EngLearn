// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.15.8
// source: proto/conabit/englearn/exercise/collection_service.proto

package exercise

import (
	context "context"
	common "github.com/Conabit-Corp/EngLearn/proto/conabit/englearn/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WordCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Words       []*WordPair `protobuf:"bytes,4,rep,name=words,proto3" json:"words,omitempty"`
}

func (x *WordCollection) Reset() {
	*x = WordCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_exercise_collection_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordCollection) ProtoMessage() {}

func (x *WordCollection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_exercise_collection_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordCollection.ProtoReflect.Descriptor instead.
func (*WordCollection) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_exercise_collection_service_proto_rawDescGZIP(), []int{0}
}

func (x *WordCollection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WordCollection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WordCollection) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WordCollection) GetWords() []*WordPair {
	if x != nil {
		return x.Words
	}
	return nil
}

type CreateWordCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session        *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	WordCollection *WordCollection `protobuf:"bytes,2,opt,name=word_collection,json=wordCollection,proto3" json:"word_collection,omitempty"`
}

func (x *CreateWordCollectionRequest) Reset() {
	*x = CreateWordCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_exercise_collection_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWordCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWordCollectionRequest) ProtoMessage() {}

func (x *CreateWordCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_exercise_collection_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWordCollectionRequest.ProtoReflect.Descriptor instead.
func (*CreateWordCollectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_exercise_collection_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWordCollectionRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *CreateWordCollectionRequest) GetWordCollection() *WordCollection {
	if x != nil {
		return x.WordCollection
	}
	return nil
}

type FindWordCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session        *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	CollectionId   string          `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	CollectionName string          `protobuf:"bytes,3,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
}

func (x *FindWordCollectionRequest) Reset() {
	*x = FindWordCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_exercise_collection_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindWordCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindWordCollectionRequest) ProtoMessage() {}

func (x *FindWordCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_exercise_collection_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindWordCollectionRequest.ProtoReflect.Descriptor instead.
func (*FindWordCollectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_exercise_collection_service_proto_rawDescGZIP(), []int{2}
}

func (x *FindWordCollectionRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *FindWordCollectionRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *FindWordCollectionRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

var File_proto_conabit_englearn_exercise_collection_service_proto protoreflect.FileDescriptor

var file_proto_conabit_englearn_exercise_collection_service_proto_rawDesc = []byte{
	0x0a, 0x38, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73,
	0x65, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x63, 0x6f, 0x6e, 0x61,
	0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x65, 0x78, 0x65,
	0x72, 0x63, 0x69, 0x73, 0x65, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e,
	0x61, 0x62, 0x69, 0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x32, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69,
	0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x64, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x39, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x1b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f,
	0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x64,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa5, 0x01, 0x0a, 0x19, 0x46,
	0x69, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61,
	0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x32, 0x8a, 0x03, 0x0a, 0x15, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65,
	0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63,
	0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e,
	0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x36, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x61,
	0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x65, 0x78, 0x65,
	0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x57, 0x6f,
	0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x63,
	0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e,
	0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x57, 0x6f, 0x72,
	0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x57,
	0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x42,
	0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f,
	0x6e, 0x61, 0x62, 0x69, 0x74, 0x2d, 0x43, 0x6f, 0x72, 0x70, 0x2f, 0x45, 0x6e, 0x67, 0x4c, 0x65,
	0x61, 0x72, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69,
	0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x65, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_conabit_englearn_exercise_collection_service_proto_rawDescOnce sync.Once
	file_proto_conabit_englearn_exercise_collection_service_proto_rawDescData = file_proto_conabit_englearn_exercise_collection_service_proto_rawDesc
)

func file_proto_conabit_englearn_exercise_collection_service_proto_rawDescGZIP() []byte {
	file_proto_conabit_englearn_exercise_collection_service_proto_rawDescOnce.Do(func() {
		file_proto_conabit_englearn_exercise_collection_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_conabit_englearn_exercise_collection_service_proto_rawDescData)
	})
	return file_proto_conabit_englearn_exercise_collection_service_proto_rawDescData
}

var file_proto_conabit_englearn_exercise_collection_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_conabit_englearn_exercise_collection_service_proto_goTypes = []interface{}{
	(*WordCollection)(nil),              // 0: conabit.englearn.exercise.WordCollection
	(*CreateWordCollectionRequest)(nil), // 1: conabit.englearn.exercise.CreateWordCollectionRequest
	(*FindWordCollectionRequest)(nil),   // 2: conabit.englearn.exercise.FindWordCollectionRequest
	(*WordPair)(nil),                    // 3: conabit.englearn.exercise.WordPair
	(*common.Session)(nil),              // 4: conabit.englearn.common.Session
}
var file_proto_conabit_englearn_exercise_collection_service_proto_depIdxs = []int32{
	3, // 0: conabit.englearn.exercise.WordCollection.words:type_name -> conabit.englearn.exercise.WordPair
	4, // 1: conabit.englearn.exercise.CreateWordCollectionRequest.session:type_name -> conabit.englearn.common.Session
	0, // 2: conabit.englearn.exercise.CreateWordCollectionRequest.word_collection:type_name -> conabit.englearn.exercise.WordCollection
	4, // 3: conabit.englearn.exercise.FindWordCollectionRequest.session:type_name -> conabit.englearn.common.Session
	1, // 4: conabit.englearn.exercise.WordCollectionService.CreateWordCollection:input_type -> conabit.englearn.exercise.CreateWordCollectionRequest
	1, // 5: conabit.englearn.exercise.WordCollectionService.UpdateWordCollection:input_type -> conabit.englearn.exercise.CreateWordCollectionRequest
	2, // 6: conabit.englearn.exercise.WordCollectionService.FindWordCollection:input_type -> conabit.englearn.exercise.FindWordCollectionRequest
	0, // 7: conabit.englearn.exercise.WordCollectionService.CreateWordCollection:output_type -> conabit.englearn.exercise.WordCollection
	0, // 8: conabit.englearn.exercise.WordCollectionService.UpdateWordCollection:output_type -> conabit.englearn.exercise.WordCollection
	0, // 9: conabit.englearn.exercise.WordCollectionService.FindWordCollection:output_type -> conabit.englearn.exercise.WordCollection
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_conabit_englearn_exercise_collection_service_proto_init() }
func file_proto_conabit_englearn_exercise_collection_service_proto_init() {
	if File_proto_conabit_englearn_exercise_collection_service_proto != nil {
		return
	}
	file_proto_conabit_englearn_exercise_word_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_conabit_englearn_exercise_collection_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_exercise_collection_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWordCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_exercise_collection_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindWordCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_conabit_englearn_exercise_collection_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_conabit_englearn_exercise_collection_service_proto_goTypes,
		DependencyIndexes: file_proto_conabit_englearn_exercise_collection_service_proto_depIdxs,
		MessageInfos:      file_proto_conabit_englearn_exercise_collection_service_proto_msgTypes,
	}.Build()
	File_proto_conabit_englearn_exercise_collection_service_proto = out.File
	file_proto_conabit_englearn_exercise_collection_service_proto_rawDesc = nil
	file_proto_conabit_englearn_exercise_collection_service_proto_goTypes = nil
	file_proto_conabit_englearn_exercise_collection_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WordCollectionServiceClient is the client API for WordCollectionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WordCollectionServiceClient interface {
	CreateWordCollection(ctx context.Context, in *CreateWordCollectionRequest, opts ...grpc.CallOption) (*WordCollection, error)
	UpdateWordCollection(ctx context.Context, in *CreateWordCollectionRequest, opts ...grpc.CallOption) (*WordCollection, error)
	FindWordCollection(ctx context.Context, in *FindWordCollectionRequest, opts ...grpc.CallOption) (*WordCollection, error)
}

type wordCollectionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWordCollectionServiceClient(cc grpc.ClientConnInterface) WordCollectionServiceClient {
	return &wordCollectionServiceClient{cc}
}

func (c *wordCollectionServiceClient) CreateWordCollection(ctx context.Context, in *CreateWordCollectionRequest, opts ...grpc.CallOption) (*WordCollection, error) {
	out := new(WordCollection)
	err := c.cc.Invoke(ctx, "/conabit.englearn.exercise.WordCollectionService/CreateWordCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wordCollectionServiceClient) UpdateWordCollection(ctx context.Context, in *CreateWordCollectionRequest, opts ...grpc.CallOption) (*WordCollection, error) {
	out := new(WordCollection)
	err := c.cc.Invoke(ctx, "/conabit.englearn.exercise.WordCollectionService/UpdateWordCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wordCollectionServiceClient) FindWordCollection(ctx context.Context, in *FindWordCollectionRequest, opts ...grpc.CallOption) (*WordCollection, error) {
	out := new(WordCollection)
	err := c.cc.Invoke(ctx, "/conabit.englearn.exercise.WordCollectionService/FindWordCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WordCollectionServiceServer is the server API for WordCollectionService service.
type WordCollectionServiceServer interface {
	CreateWordCollection(context.Context, *CreateWordCollectionRequest) (*WordCollection, error)
	UpdateWordCollection(context.Context, *CreateWordCollectionRequest) (*WordCollection, error)
	FindWordCollection(context.Context, *FindWordCollectionRequest) (*WordCollection, error)
}

// UnimplementedWordCollectionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWordCollectionServiceServer struct {
}

func (*UnimplementedWordCollectionServiceServer) CreateWordCollection(context.Context, *CreateWordCollectionRequest) (*WordCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWordCollection not implemented")
}
func (*UnimplementedWordCollectionServiceServer) UpdateWordCollection(context.Context, *CreateWordCollectionRequest) (*WordCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWordCollection not implemented")
}
func (*UnimplementedWordCollectionServiceServer) FindWordCollection(context.Context, *FindWordCollectionRequest) (*WordCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindWordCollection not implemented")
}

func RegisterWordCollectionServiceServer(s *grpc.Server, srv WordCollectionServiceServer) {
	s.RegisterService(&_WordCollectionService_serviceDesc, srv)
}

func _WordCollectionService_CreateWordCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWordCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordCollectionServiceServer).CreateWordCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conabit.englearn.exercise.WordCollectionService/CreateWordCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordCollectionServiceServer).CreateWordCollection(ctx, req.(*CreateWordCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WordCollectionService_UpdateWordCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWordCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordCollectionServiceServer).UpdateWordCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conabit.englearn.exercise.WordCollectionService/UpdateWordCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordCollectionServiceServer).UpdateWordCollection(ctx, req.(*CreateWordCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WordCollectionService_FindWordCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindWordCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordCollectionServiceServer).FindWordCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conabit.englearn.exercise.WordCollectionService/FindWordCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordCollectionServiceServer).FindWordCollection(ctx, req.(*FindWordCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WordCollectionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conabit.englearn.exercise.WordCollectionService",
	HandlerType: (*WordCollectionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWordCollection",
			Handler:    _WordCollectionService_CreateWordCollection_Handler,
		},
		{
			MethodName: "UpdateWordCollection",
			Handler:    _WordCollectionService_UpdateWordCollection_Handler,
		},
		{
			MethodName: "FindWordCollection",
			Handler:    _WordCollectionService_FindWordCollection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/conabit/englearn/exercise/collection_service.proto",
}
