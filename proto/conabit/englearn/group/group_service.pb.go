// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.15.8
// source: proto/conabit/englearn/group/group_service.proto

package group

import (
	context "context"
	common "github.com/Conabit-Corp/EngLearn/proto/conabit/englearn/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroudInvation_InvationStatus int32

const (
	GroudInvation_CREATED  GroudInvation_InvationStatus = 0
	GroudInvation_ACCEPTED GroudInvation_InvationStatus = 1
	GroudInvation_REJECTED GroudInvation_InvationStatus = 2
)

// Enum value maps for GroudInvation_InvationStatus.
var (
	GroudInvation_InvationStatus_name = map[int32]string{
		0: "CREATED",
		1: "ACCEPTED",
		2: "REJECTED",
	}
	GroudInvation_InvationStatus_value = map[string]int32{
		"CREATED":  0,
		"ACCEPTED": 1,
		"REJECTED": 2,
	}
)

func (x GroudInvation_InvationStatus) Enum() *GroudInvation_InvationStatus {
	p := new(GroudInvation_InvationStatus)
	*p = x
	return p
}

func (x GroudInvation_InvationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroudInvation_InvationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_conabit_englearn_group_group_service_proto_enumTypes[0].Descriptor()
}

func (GroudInvation_InvationStatus) Type() protoreflect.EnumType {
	return &file_proto_conabit_englearn_group_group_service_proto_enumTypes[0]
}

func (x GroudInvation_InvationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroudInvation_InvationStatus.Descriptor instead.
func (GroudInvation_InvationStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{11, 0}
}

type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserIds []string `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGroupRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type CreateGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGroupResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type AddToGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddToGroupRequest) Reset() {
	*x = AddToGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToGroupRequest) ProtoMessage() {}

func (x *AddToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToGroupRequest.ProtoReflect.Descriptor instead.
func (*AddToGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{2}
}

func (x *AddToGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AddToGroupRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AddToGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvationId string `protobuf:"bytes,1,opt,name=invation_id,json=invationId,proto3" json:"invation_id,omitempty"`
}

func (x *AddToGroupResponse) Reset() {
	*x = AddToGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToGroupResponse) ProtoMessage() {}

func (x *AddToGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToGroupResponse.ProtoReflect.Descriptor instead.
func (*AddToGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{3}
}

func (x *AddToGroupResponse) GetInvationId() string {
	if x != nil {
		return x.InvationId
	}
	return ""
}

type MyInvationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *MyInvationsRequest) Reset() {
	*x = MyInvationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyInvationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyInvationsRequest) ProtoMessage() {}

func (x *MyInvationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyInvationsRequest.ProtoReflect.Descriptor instead.
func (*MyInvationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{4}
}

func (x *MyInvationsRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type JoinGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	GroupId string          `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *JoinGroupRequest) Reset() {
	*x = JoinGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupRequest) ProtoMessage() {}

func (x *JoinGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupRequest.ProtoReflect.Descriptor instead.
func (*JoinGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{5}
}

func (x *JoinGroupRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *JoinGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type JoinGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *JoinGroupResponse) Reset() {
	*x = JoinGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupResponse) ProtoMessage() {}

func (x *JoinGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupResponse.ProtoReflect.Descriptor instead.
func (*JoinGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{6}
}

func (x *JoinGroupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RejectInvationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	GroupId string          `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *RejectInvationRequest) Reset() {
	*x = RejectInvationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectInvationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectInvationRequest) ProtoMessage() {}

func (x *RejectInvationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectInvationRequest.ProtoReflect.Descriptor instead.
func (*RejectInvationRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{7}
}

func (x *RejectInvationRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *RejectInvationRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type RejectInvationReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RejectInvationReponse) Reset() {
	*x = RejectInvationReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectInvationReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectInvationReponse) ProtoMessage() {}

func (x *RejectInvationReponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectInvationReponse.ProtoReflect.Descriptor instead.
func (*RejectInvationReponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{8}
}

func (x *RejectInvationReponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type MyGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *MyGroupsRequest) Reset() {
	*x = MyGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyGroupsRequest) ProtoMessage() {}

func (x *MyGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyGroupsRequest.ProtoReflect.Descriptor instead.
func (*MyGroupsRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{9}
}

func (x *MyGroupsRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type MyGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*MyGroupsResponse_Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *MyGroupsResponse) Reset() {
	*x = MyGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyGroupsResponse) ProtoMessage() {}

func (x *MyGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyGroupsResponse.ProtoReflect.Descriptor instead.
func (*MyGroupsResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{10}
}

func (x *MyGroupsResponse) GetGroups() []*MyGroupsResponse_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GroudInvation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string                       `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Status  GroudInvation_InvationStatus `protobuf:"varint,2,opt,name=status,proto3,enum=conabit.englearn.group.GroudInvation_InvationStatus" json:"status,omitempty"`
}

func (x *GroudInvation) Reset() {
	*x = GroudInvation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroudInvation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroudInvation) ProtoMessage() {}

func (x *GroudInvation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroudInvation.ProtoReflect.Descriptor instead.
func (*GroudInvation) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{11}
}

func (x *GroudInvation) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroudInvation) GetStatus() GroudInvation_InvationStatus {
	if x != nil {
		return x.Status
	}
	return GroudInvation_CREATED
}

type MyGroupsResponse_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *MyGroupsResponse_Group) Reset() {
	*x = MyGroupsResponse_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyGroupsResponse_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyGroupsResponse_Group) ProtoMessage() {}

func (x *MyGroupsResponse_Group) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_group_group_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyGroupsResponse_Group.ProtoReflect.Descriptor instead.
func (*MyGroupsResponse_Group) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP(), []int{10, 0}
}

func (x *MyGroupsResponse_Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MyGroupsResponse_Group) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

var File_proto_conabit_englearn_group_group_service_proto protoreflect.FileDescriptor

var file_proto_conabit_englearn_group_group_service_proto_rawDesc = []byte{
	0x0a, 0x30, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x30, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x47,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x54, 0x6f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x50,
	0x0a, 0x12, 0x4d, 0x79, 0x49, 0x6e, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x69, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x11, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x6e, 0x0a, 0x15, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65,
	0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4d, 0x0a,
	0x0f, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x92, 0x01, 0x0a,
	0x10, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4d, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x36, 0x0a, 0x05, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x4c,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34,
	0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x39, 0x0a, 0x0e,
	0x49, 0x6e, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a,
	0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x32, 0xfc, 0x04, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69,
	0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e,
	0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x65, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f,
	0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0b, 0x4d, 0x79, 0x49,
	0x6e, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62,
	0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x4d, 0x79, 0x49, 0x6e, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65,
	0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x64, 0x49, 0x6e, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x62, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x28, 0x2e, 0x63,
	0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74,
	0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x0e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65,
	0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x08, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x4d, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6e,
	0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2d, 0x43, 0x6f, 0x72,
	0x70, 0x2f, 0x45, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_conabit_englearn_group_group_service_proto_rawDescOnce sync.Once
	file_proto_conabit_englearn_group_group_service_proto_rawDescData = file_proto_conabit_englearn_group_group_service_proto_rawDesc
)

func file_proto_conabit_englearn_group_group_service_proto_rawDescGZIP() []byte {
	file_proto_conabit_englearn_group_group_service_proto_rawDescOnce.Do(func() {
		file_proto_conabit_englearn_group_group_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_conabit_englearn_group_group_service_proto_rawDescData)
	})
	return file_proto_conabit_englearn_group_group_service_proto_rawDescData
}

var file_proto_conabit_englearn_group_group_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_conabit_englearn_group_group_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_conabit_englearn_group_group_service_proto_goTypes = []interface{}{
	(GroudInvation_InvationStatus)(0), // 0: conabit.englearn.group.GroudInvation.InvationStatus
	(*CreateGroupRequest)(nil),        // 1: conabit.englearn.group.CreateGroupRequest
	(*CreateGroupResponse)(nil),       // 2: conabit.englearn.group.CreateGroupResponse
	(*AddToGroupRequest)(nil),         // 3: conabit.englearn.group.AddToGroupRequest
	(*AddToGroupResponse)(nil),        // 4: conabit.englearn.group.AddToGroupResponse
	(*MyInvationsRequest)(nil),        // 5: conabit.englearn.group.MyInvationsRequest
	(*JoinGroupRequest)(nil),          // 6: conabit.englearn.group.JoinGroupRequest
	(*JoinGroupResponse)(nil),         // 7: conabit.englearn.group.JoinGroupResponse
	(*RejectInvationRequest)(nil),     // 8: conabit.englearn.group.RejectInvationRequest
	(*RejectInvationReponse)(nil),     // 9: conabit.englearn.group.RejectInvationReponse
	(*MyGroupsRequest)(nil),           // 10: conabit.englearn.group.MyGroupsRequest
	(*MyGroupsResponse)(nil),          // 11: conabit.englearn.group.MyGroupsResponse
	(*GroudInvation)(nil),             // 12: conabit.englearn.group.GroudInvation
	(*MyGroupsResponse_Group)(nil),    // 13: conabit.englearn.group.MyGroupsResponse.Group
	(*common.Session)(nil),            // 14: conabit.englearn.common.Session
}
var file_proto_conabit_englearn_group_group_service_proto_depIdxs = []int32{
	14, // 0: conabit.englearn.group.MyInvationsRequest.session:type_name -> conabit.englearn.common.Session
	14, // 1: conabit.englearn.group.JoinGroupRequest.session:type_name -> conabit.englearn.common.Session
	14, // 2: conabit.englearn.group.RejectInvationRequest.session:type_name -> conabit.englearn.common.Session
	14, // 3: conabit.englearn.group.MyGroupsRequest.session:type_name -> conabit.englearn.common.Session
	13, // 4: conabit.englearn.group.MyGroupsResponse.groups:type_name -> conabit.englearn.group.MyGroupsResponse.Group
	0,  // 5: conabit.englearn.group.GroudInvation.status:type_name -> conabit.englearn.group.GroudInvation.InvationStatus
	1,  // 6: conabit.englearn.group.GroupService.CreateGroup:input_type -> conabit.englearn.group.CreateGroupRequest
	3,  // 7: conabit.englearn.group.GroupService.AddToGroup:input_type -> conabit.englearn.group.AddToGroupRequest
	5,  // 8: conabit.englearn.group.GroupService.MyInvations:input_type -> conabit.englearn.group.MyInvationsRequest
	6,  // 9: conabit.englearn.group.GroupService.JoinGroup:input_type -> conabit.englearn.group.JoinGroupRequest
	8,  // 10: conabit.englearn.group.GroupService.RejectInvation:input_type -> conabit.englearn.group.RejectInvationRequest
	10, // 11: conabit.englearn.group.GroupService.MyGroups:input_type -> conabit.englearn.group.MyGroupsRequest
	2,  // 12: conabit.englearn.group.GroupService.CreateGroup:output_type -> conabit.englearn.group.CreateGroupResponse
	4,  // 13: conabit.englearn.group.GroupService.AddToGroup:output_type -> conabit.englearn.group.AddToGroupResponse
	12, // 14: conabit.englearn.group.GroupService.MyInvations:output_type -> conabit.englearn.group.GroudInvation
	7,  // 15: conabit.englearn.group.GroupService.JoinGroup:output_type -> conabit.englearn.group.JoinGroupResponse
	9,  // 16: conabit.englearn.group.GroupService.RejectInvation:output_type -> conabit.englearn.group.RejectInvationReponse
	11, // 17: conabit.englearn.group.GroupService.MyGroups:output_type -> conabit.englearn.group.MyGroupsResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_conabit_englearn_group_group_service_proto_init() }
func file_proto_conabit_englearn_group_group_service_proto_init() {
	if File_proto_conabit_englearn_group_group_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyInvationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectInvationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectInvationReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroudInvation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_group_group_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyGroupsResponse_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_conabit_englearn_group_group_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_conabit_englearn_group_group_service_proto_goTypes,
		DependencyIndexes: file_proto_conabit_englearn_group_group_service_proto_depIdxs,
		EnumInfos:         file_proto_conabit_englearn_group_group_service_proto_enumTypes,
		MessageInfos:      file_proto_conabit_englearn_group_group_service_proto_msgTypes,
	}.Build()
	File_proto_conabit_englearn_group_group_service_proto = out.File
	file_proto_conabit_englearn_group_group_service_proto_rawDesc = nil
	file_proto_conabit_englearn_group_group_service_proto_goTypes = nil
	file_proto_conabit_englearn_group_group_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GroupServiceClient is the client API for GroupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroupServiceClient interface {
	CreateGroup(ctx context.Context, in *CreateGroupRequest, opts ...grpc.CallOption) (*CreateGroupResponse, error)
	AddToGroup(ctx context.Context, in *AddToGroupRequest, opts ...grpc.CallOption) (*AddToGroupResponse, error)
	MyInvations(ctx context.Context, in *MyInvationsRequest, opts ...grpc.CallOption) (GroupService_MyInvationsClient, error)
	JoinGroup(ctx context.Context, in *JoinGroupRequest, opts ...grpc.CallOption) (*JoinGroupResponse, error)
	RejectInvation(ctx context.Context, in *RejectInvationRequest, opts ...grpc.CallOption) (*RejectInvationReponse, error)
	MyGroups(ctx context.Context, in *MyGroupsRequest, opts ...grpc.CallOption) (*MyGroupsResponse, error)
}

type groupServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGroupServiceClient(cc grpc.ClientConnInterface) GroupServiceClient {
	return &groupServiceClient{cc}
}

func (c *groupServiceClient) CreateGroup(ctx context.Context, in *CreateGroupRequest, opts ...grpc.CallOption) (*CreateGroupResponse, error) {
	out := new(CreateGroupResponse)
	err := c.cc.Invoke(ctx, "/conabit.englearn.group.GroupService/CreateGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) AddToGroup(ctx context.Context, in *AddToGroupRequest, opts ...grpc.CallOption) (*AddToGroupResponse, error) {
	out := new(AddToGroupResponse)
	err := c.cc.Invoke(ctx, "/conabit.englearn.group.GroupService/AddToGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) MyInvations(ctx context.Context, in *MyInvationsRequest, opts ...grpc.CallOption) (GroupService_MyInvationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GroupService_serviceDesc.Streams[0], "/conabit.englearn.group.GroupService/MyInvations", opts...)
	if err != nil {
		return nil, err
	}
	x := &groupServiceMyInvationsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GroupService_MyInvationsClient interface {
	Recv() (*GroudInvation, error)
	grpc.ClientStream
}

type groupServiceMyInvationsClient struct {
	grpc.ClientStream
}

func (x *groupServiceMyInvationsClient) Recv() (*GroudInvation, error) {
	m := new(GroudInvation)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *groupServiceClient) JoinGroup(ctx context.Context, in *JoinGroupRequest, opts ...grpc.CallOption) (*JoinGroupResponse, error) {
	out := new(JoinGroupResponse)
	err := c.cc.Invoke(ctx, "/conabit.englearn.group.GroupService/JoinGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) RejectInvation(ctx context.Context, in *RejectInvationRequest, opts ...grpc.CallOption) (*RejectInvationReponse, error) {
	out := new(RejectInvationReponse)
	err := c.cc.Invoke(ctx, "/conabit.englearn.group.GroupService/RejectInvation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) MyGroups(ctx context.Context, in *MyGroupsRequest, opts ...grpc.CallOption) (*MyGroupsResponse, error) {
	out := new(MyGroupsResponse)
	err := c.cc.Invoke(ctx, "/conabit.englearn.group.GroupService/MyGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GroupServiceServer is the server API for GroupService service.
type GroupServiceServer interface {
	CreateGroup(context.Context, *CreateGroupRequest) (*CreateGroupResponse, error)
	AddToGroup(context.Context, *AddToGroupRequest) (*AddToGroupResponse, error)
	MyInvations(*MyInvationsRequest, GroupService_MyInvationsServer) error
	JoinGroup(context.Context, *JoinGroupRequest) (*JoinGroupResponse, error)
	RejectInvation(context.Context, *RejectInvationRequest) (*RejectInvationReponse, error)
	MyGroups(context.Context, *MyGroupsRequest) (*MyGroupsResponse, error)
}

// UnimplementedGroupServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGroupServiceServer struct {
}

func (*UnimplementedGroupServiceServer) CreateGroup(context.Context, *CreateGroupRequest) (*CreateGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGroup not implemented")
}
func (*UnimplementedGroupServiceServer) AddToGroup(context.Context, *AddToGroupRequest) (*AddToGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddToGroup not implemented")
}
func (*UnimplementedGroupServiceServer) MyInvations(*MyInvationsRequest, GroupService_MyInvationsServer) error {
	return status.Errorf(codes.Unimplemented, "method MyInvations not implemented")
}
func (*UnimplementedGroupServiceServer) JoinGroup(context.Context, *JoinGroupRequest) (*JoinGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinGroup not implemented")
}
func (*UnimplementedGroupServiceServer) RejectInvation(context.Context, *RejectInvationRequest) (*RejectInvationReponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RejectInvation not implemented")
}
func (*UnimplementedGroupServiceServer) MyGroups(context.Context, *MyGroupsRequest) (*MyGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MyGroups not implemented")
}

func RegisterGroupServiceServer(s *grpc.Server, srv GroupServiceServer) {
	s.RegisterService(&_GroupService_serviceDesc, srv)
}

func _GroupService_CreateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).CreateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conabit.englearn.group.GroupService/CreateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).CreateGroup(ctx, req.(*CreateGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_AddToGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddToGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).AddToGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conabit.englearn.group.GroupService/AddToGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).AddToGroup(ctx, req.(*AddToGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_MyInvations_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MyInvationsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GroupServiceServer).MyInvations(m, &groupServiceMyInvationsServer{stream})
}

type GroupService_MyInvationsServer interface {
	Send(*GroudInvation) error
	grpc.ServerStream
}

type groupServiceMyInvationsServer struct {
	grpc.ServerStream
}

func (x *groupServiceMyInvationsServer) Send(m *GroudInvation) error {
	return x.ServerStream.SendMsg(m)
}

func _GroupService_JoinGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).JoinGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conabit.englearn.group.GroupService/JoinGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).JoinGroup(ctx, req.(*JoinGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_RejectInvation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RejectInvationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).RejectInvation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conabit.englearn.group.GroupService/RejectInvation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).RejectInvation(ctx, req.(*RejectInvationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_MyGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MyGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).MyGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conabit.englearn.group.GroupService/MyGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).MyGroups(ctx, req.(*MyGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GroupService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conabit.englearn.group.GroupService",
	HandlerType: (*GroupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGroup",
			Handler:    _GroupService_CreateGroup_Handler,
		},
		{
			MethodName: "AddToGroup",
			Handler:    _GroupService_AddToGroup_Handler,
		},
		{
			MethodName: "JoinGroup",
			Handler:    _GroupService_JoinGroup_Handler,
		},
		{
			MethodName: "RejectInvation",
			Handler:    _GroupService_RejectInvation_Handler,
		},
		{
			MethodName: "MyGroups",
			Handler:    _GroupService_MyGroups_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MyInvations",
			Handler:       _GroupService_MyInvations_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/conabit/englearn/group/group_service.proto",
}
