// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.15.8
// source: proto/conabit/englearn/dashboard/dashboard_service.proto

package dashboard

import (
	context "context"
	collection "github.com/Conabit-Corp/EngLearn/proto/conabit/englearn/collection"
	common "github.com/Conabit-Corp/EngLearn/proto/conabit/englearn/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WordOfDayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *WordOfDayRequest) Reset() {
	*x = WordOfDayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordOfDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordOfDayRequest) ProtoMessage() {}

func (x *WordOfDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordOfDayRequest.ProtoReflect.Descriptor instead.
func (*WordOfDayRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescGZIP(), []int{0}
}

func (x *WordOfDayRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type WordOfDayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word *collection.WordPair `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
}

func (x *WordOfDayResponse) Reset() {
	*x = WordOfDayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordOfDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordOfDayResponse) ProtoMessage() {}

func (x *WordOfDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordOfDayResponse.ProtoReflect.Descriptor instead.
func (*WordOfDayResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescGZIP(), []int{1}
}

func (x *WordOfDayResponse) GetWord() *collection.WordPair {
	if x != nil {
		return x.Word
	}
	return nil
}

type MyStatisticsOverwievRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *MyStatisticsOverwievRequest) Reset() {
	*x = MyStatisticsOverwievRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyStatisticsOverwievRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyStatisticsOverwievRequest) ProtoMessage() {}

func (x *MyStatisticsOverwievRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyStatisticsOverwievRequest.ProtoReflect.Descriptor instead.
func (*MyStatisticsOverwievRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescGZIP(), []int{2}
}

func (x *MyStatisticsOverwievRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type MyStatisticsOverwievResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MyStatisticsOverwievResponse) Reset() {
	*x = MyStatisticsOverwievResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyStatisticsOverwievResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyStatisticsOverwievResponse) ProtoMessage() {}

func (x *MyStatisticsOverwievResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyStatisticsOverwievResponse.ProtoReflect.Descriptor instead.
func (*MyStatisticsOverwievResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescGZIP(), []int{3}
}

type WordsToRepeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *common.Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *WordsToRepeatRequest) Reset() {
	*x = WordsToRepeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordsToRepeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordsToRepeatRequest) ProtoMessage() {}

func (x *WordsToRepeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordsToRepeatRequest.ProtoReflect.Descriptor instead.
func (*WordsToRepeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescGZIP(), []int{4}
}

func (x *WordsToRepeatRequest) GetSession() *common.Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type WordsToRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//todo how start
	Word []*collection.WordPair `protobuf:"bytes,1,rep,name=word,proto3" json:"word,omitempty"`
}

func (x *WordsToRepeatResponse) Reset() {
	*x = WordsToRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordsToRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordsToRepeatResponse) ProtoMessage() {}

func (x *WordsToRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordsToRepeatResponse.ProtoReflect.Descriptor instead.
func (*WordsToRepeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescGZIP(), []int{5}
}

func (x *WordsToRepeatResponse) GetWord() []*collection.WordPair {
	if x != nil {
		return x.Word
	}
	return nil
}

var File_proto_conabit_englearn_dashboard_dashboard_service_proto protoreflect.FileDescriptor

var file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDesc = []byte{
	0x0a, 0x38, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f,
	0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x63, 0x6f, 0x6e, 0x61,
	0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62,
	0x69, 0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e,
	0x0a, 0x10, 0x57, 0x6f, 0x72, 0x64, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e,
	0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4e,
	0x0a, 0x11, 0x57, 0x6f, 0x72, 0x64, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x57, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x59,
	0x0a, 0x1b, 0x4d, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4f, 0x76,
	0x65, 0x72, 0x77, 0x69, 0x65, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a,
	0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x69, 0x65,
	0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x14, 0x57, 0x6f, 0x72,
	0x64, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a,
	0x15, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65,
	0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x77, 0x6f, 0x72,
	0x64, 0x32, 0x84, 0x03, 0x0a, 0x10, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x64, 0x4f, 0x66,
	0x44, 0x61, 0x79, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e,
	0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x57, 0x6f, 0x72, 0x64, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x57,
	0x6f, 0x72, 0x64, 0x4f, 0x66, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x14, 0x4d, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x69, 0x65, 0x76, 0x12, 0x37, 0x2e, 0x63, 0x6f,
	0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4d, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x69, 0x65, 0x76, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65,
	0x6e, 0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x4d, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4f, 0x76,
	0x65, 0x72, 0x77, 0x69, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x76, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x12, 0x30, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e, 0x67, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x57,
	0x6f, 0x72, 0x64, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2e, 0x65, 0x6e,
	0x67, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2d, 0x43,
	0x6f, 0x72, 0x70, 0x2f, 0x45, 0x6e, 0x67, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x61, 0x62, 0x69, 0x74, 0x2f, 0x65, 0x6e, 0x67, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescOnce sync.Once
	file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescData = file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDesc
)

func file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescGZIP() []byte {
	file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescOnce.Do(func() {
		file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescData)
	})
	return file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDescData
}

var file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_conabit_englearn_dashboard_dashboard_service_proto_goTypes = []interface{}{
	(*WordOfDayRequest)(nil),             // 0: conabit.englearn.dashboard.WordOfDayRequest
	(*WordOfDayResponse)(nil),            // 1: conabit.englearn.dashboard.WordOfDayResponse
	(*MyStatisticsOverwievRequest)(nil),  // 2: conabit.englearn.dashboard.MyStatisticsOverwievRequest
	(*MyStatisticsOverwievResponse)(nil), // 3: conabit.englearn.dashboard.MyStatisticsOverwievResponse
	(*WordsToRepeatRequest)(nil),         // 4: conabit.englearn.dashboard.WordsToRepeatRequest
	(*WordsToRepeatResponse)(nil),        // 5: conabit.englearn.dashboard.WordsToRepeatResponse
	(*common.Session)(nil),               // 6: conabit.englearn.common.Session
	(*collection.WordPair)(nil),          // 7: conabit.englearn.collection.WordPair
}
var file_proto_conabit_englearn_dashboard_dashboard_service_proto_depIdxs = []int32{
	6, // 0: conabit.englearn.dashboard.WordOfDayRequest.session:type_name -> conabit.englearn.common.Session
	7, // 1: conabit.englearn.dashboard.WordOfDayResponse.word:type_name -> conabit.englearn.collection.WordPair
	6, // 2: conabit.englearn.dashboard.MyStatisticsOverwievRequest.session:type_name -> conabit.englearn.common.Session
	6, // 3: conabit.englearn.dashboard.WordsToRepeatRequest.session:type_name -> conabit.englearn.common.Session
	7, // 4: conabit.englearn.dashboard.WordsToRepeatResponse.word:type_name -> conabit.englearn.collection.WordPair
	0, // 5: conabit.englearn.dashboard.DashboardService.WordOfDay:input_type -> conabit.englearn.dashboard.WordOfDayRequest
	2, // 6: conabit.englearn.dashboard.DashboardService.MyStatisticsOverwiev:input_type -> conabit.englearn.dashboard.MyStatisticsOverwievRequest
	4, // 7: conabit.englearn.dashboard.DashboardService.WordsToRepeat:input_type -> conabit.englearn.dashboard.WordsToRepeatRequest
	1, // 8: conabit.englearn.dashboard.DashboardService.WordOfDay:output_type -> conabit.englearn.dashboard.WordOfDayResponse
	3, // 9: conabit.englearn.dashboard.DashboardService.MyStatisticsOverwiev:output_type -> conabit.englearn.dashboard.MyStatisticsOverwievResponse
	5, // 10: conabit.englearn.dashboard.DashboardService.WordsToRepeat:output_type -> conabit.englearn.dashboard.WordsToRepeatResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_conabit_englearn_dashboard_dashboard_service_proto_init() }
func file_proto_conabit_englearn_dashboard_dashboard_service_proto_init() {
	if File_proto_conabit_englearn_dashboard_dashboard_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordOfDayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordOfDayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyStatisticsOverwievRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyStatisticsOverwievResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordsToRepeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordsToRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_conabit_englearn_dashboard_dashboard_service_proto_goTypes,
		DependencyIndexes: file_proto_conabit_englearn_dashboard_dashboard_service_proto_depIdxs,
		MessageInfos:      file_proto_conabit_englearn_dashboard_dashboard_service_proto_msgTypes,
	}.Build()
	File_proto_conabit_englearn_dashboard_dashboard_service_proto = out.File
	file_proto_conabit_englearn_dashboard_dashboard_service_proto_rawDesc = nil
	file_proto_conabit_englearn_dashboard_dashboard_service_proto_goTypes = nil
	file_proto_conabit_englearn_dashboard_dashboard_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DashboardServiceClient is the client API for DashboardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DashboardServiceClient interface {
	WordOfDay(ctx context.Context, in *WordOfDayRequest, opts ...grpc.CallOption) (*WordOfDayResponse, error)
	MyStatisticsOverwiev(ctx context.Context, in *MyStatisticsOverwievRequest, opts ...grpc.CallOption) (*MyStatisticsOverwievResponse, error)
	WordsToRepeat(ctx context.Context, in *WordsToRepeatRequest, opts ...grpc.CallOption) (*WordsToRepeatResponse, error)
}

type dashboardServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDashboardServiceClient(cc grpc.ClientConnInterface) DashboardServiceClient {
	return &dashboardServiceClient{cc}
}

func (c *dashboardServiceClient) WordOfDay(ctx context.Context, in *WordOfDayRequest, opts ...grpc.CallOption) (*WordOfDayResponse, error) {
	out := new(WordOfDayResponse)
	err := c.cc.Invoke(ctx, "/conabit.englearn.dashboard.DashboardService/WordOfDay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) MyStatisticsOverwiev(ctx context.Context, in *MyStatisticsOverwievRequest, opts ...grpc.CallOption) (*MyStatisticsOverwievResponse, error) {
	out := new(MyStatisticsOverwievResponse)
	err := c.cc.Invoke(ctx, "/conabit.englearn.dashboard.DashboardService/MyStatisticsOverwiev", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) WordsToRepeat(ctx context.Context, in *WordsToRepeatRequest, opts ...grpc.CallOption) (*WordsToRepeatResponse, error) {
	out := new(WordsToRepeatResponse)
	err := c.cc.Invoke(ctx, "/conabit.englearn.dashboard.DashboardService/WordsToRepeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DashboardServiceServer is the server API for DashboardService service.
type DashboardServiceServer interface {
	WordOfDay(context.Context, *WordOfDayRequest) (*WordOfDayResponse, error)
	MyStatisticsOverwiev(context.Context, *MyStatisticsOverwievRequest) (*MyStatisticsOverwievResponse, error)
	WordsToRepeat(context.Context, *WordsToRepeatRequest) (*WordsToRepeatResponse, error)
}

// UnimplementedDashboardServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDashboardServiceServer struct {
}

func (*UnimplementedDashboardServiceServer) WordOfDay(context.Context, *WordOfDayRequest) (*WordOfDayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WordOfDay not implemented")
}
func (*UnimplementedDashboardServiceServer) MyStatisticsOverwiev(context.Context, *MyStatisticsOverwievRequest) (*MyStatisticsOverwievResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MyStatisticsOverwiev not implemented")
}
func (*UnimplementedDashboardServiceServer) WordsToRepeat(context.Context, *WordsToRepeatRequest) (*WordsToRepeatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WordsToRepeat not implemented")
}

func RegisterDashboardServiceServer(s *grpc.Server, srv DashboardServiceServer) {
	s.RegisterService(&_DashboardService_serviceDesc, srv)
}

func _DashboardService_WordOfDay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WordOfDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).WordOfDay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conabit.englearn.dashboard.DashboardService/WordOfDay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).WordOfDay(ctx, req.(*WordOfDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_MyStatisticsOverwiev_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MyStatisticsOverwievRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).MyStatisticsOverwiev(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conabit.englearn.dashboard.DashboardService/MyStatisticsOverwiev",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).MyStatisticsOverwiev(ctx, req.(*MyStatisticsOverwievRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_WordsToRepeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WordsToRepeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).WordsToRepeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conabit.englearn.dashboard.DashboardService/WordsToRepeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).WordsToRepeat(ctx, req.(*WordsToRepeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DashboardService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conabit.englearn.dashboard.DashboardService",
	HandlerType: (*DashboardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WordOfDay",
			Handler:    _DashboardService_WordOfDay_Handler,
		},
		{
			MethodName: "MyStatisticsOverwiev",
			Handler:    _DashboardService_MyStatisticsOverwiev_Handler,
		},
		{
			MethodName: "WordsToRepeat",
			Handler:    _DashboardService_WordsToRepeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/conabit/englearn/dashboard/dashboard_service.proto",
}
